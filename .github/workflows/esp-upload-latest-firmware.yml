name: ESP32 Upload Latest Firmware

on:
  push:
    branches:
      - master

jobs:
  esp-upload-latest-firmware:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Find latest ESP32 firmware
        id: find-firmware
        run: |
          latest_firmware=$(ls esp/firmware/*__LEEF__* | sort | tail -n 1)
          echo "latest_firmware=${latest_firmware}" >> $GITHUB_ENV

      - name: Check if firmware already exists in RTD
        id: check-firmware
        run: |
          filename=$(basename ${{ env.latest_firmware }})
          result=$(firebase database:get --project "$FIREBASE_PROJECT" "/firmware/${filename}" --token "$FIREBASE_TOKEN")
          echo "result=${result}" >> $GITHUB_ENV

      - name: Upload to Firebase
        if: steps.check-firmware.outputs.result == 'null'
        id: upload-firebase
        run: |
          filename=$(basename ${{ env.latest_firmware }})
          date_uploaded=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          storage_url="${FIREBASE_STORAGE}/${filename}"
          
          # Install Firebase CLI
          curl -sL https://firebase.tools | bash

          # Upload file to Firebase Storage
          firebase deploy --only hosting:[??????] --message "Uploading ${filename}" --token "$FIREBASE_TOKEN"
          
          # Update Realtime Database
          firebase database:update --data "{\"dateUploaded\": \"${date_uploaded}\", \"filename\": \"${filename}\", \"url\": \"${storage_url}\"}" "/firmware/${filename}/" --project "$FIREBASE_PROJECT" --token "$FIREBASE_TOKEN"

    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASE_PROJECT: ${{ secrets.FIREBASE_PROJECT }}
      FIREBASE_STORAGE: ${{ secrets.FIREBASE_STORAGE }}
